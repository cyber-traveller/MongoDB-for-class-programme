{
  "users": [
    {
      "_id": { "$oid": "67499b858a257dd7300d8190" },
      "name": "John Doe",
      "email": "john.doe@example.com",
      "mentee_count": 18,
      "codekata_problems_solved": 70
    }
  ],
  "codekata": [
    {
      "_id": { "$oid": "674ac86254617824120d8199" },
      "user_id": { "$oid": "67499b858a257dd7300d8190" },
      "problems_solved": 70
    }
  ],
  "attendance": [
    {
      "_id": { "$oid": "674acbf654617824120d81a3" },
      "user_id": { "$oid": "67499b858a257dd7300d8190" },
      "topic_id": { "$oid": "6749a30a8a257dd7300d819f" },
      "date": { "$date": "2020-10-20T00:00:00.000Z" },
      "status": "absent"
    }
  ],
  "topics": [
    {
      "_id": { "$oid": "6749a30a8a257dd7300d819f" },
      "name": "JavaScript Basics",
      "date": { "$date": "2020-10-10T00:00:00.000Z" },
      "mentor_id": { "$oid": "67499fc78a257dd7300d819a" },
      "batch": "FSD-WD-T-B8",
      "description": "Introduction to JavaScript fundamentals."
    }
  ],
  "tasks": [
    {
      "_id": { "$oid": "6749acc278980a9f930d8190" },
      "name": "JavaScript Array Methods Task",
      "description": "Solve problems using JavaScript array methods.",
      "date": { "$date": "2020-10-25T00:00:00.000Z" },
      "user_id": { "$oid": "67499b858a257dd7300d8190" },
      "topic_id": { "$oid": "6749a30a8a257dd7300d81a1" },
      "status": "Active Tasks",
      "completed": false,
      "submission_date": null
    }
  ],
  "company_drives": [
    {
      "_id": { "$oid": "674ac56d54617824120d8190" },
      "company_name": "Amazon",
      "date": { "$date": "2020-10-20T00:00:00.000Z" },
      "eligibility": {
        "min_codekata_problems_solved": 100,
        "batch": "FSD-WD-T-B8"
      },
      "job_description": "Frontend Developer Intern",
      "location": "Remote",
      "student_appeared": [
        {
          "student_id": { "$oid": "67499b858a257dd7300d8190" },
          "status": "Eligible",
          "placement_status": "Appeared"
        }
      ]
    }
  ],
  "mentors": [
    {
      "_id": { "$oid": "67499fc78a257dd7300d819a" },
      "name": "Rahul Sharma",
      "email": "rahul.sharma@example.com",
      "mentees": 20,
      "batch": "FSD-WD-T-B8"
    }
  ]
}

1)Find all the topics and tasks which are thought in the month of October
Query:
    db.topics.aggregate([
      {
        $match: {
          date: {
            $gte: ISODate("2020-10-01T00:00:00Z"),
            $lt: ISODate("2020-11-01T00:00:00Z")
          }
        }
      },
      {
        $project: {
          _id: 0, // Exclude _id
          name: 1,
          date: 1,
          description: 1,
          type: { $literal: "topic" } // Add a type field
        }
      },
      {
        $unionWith: {
          coll: "tasks",
          pipeline: [
            {
              $match: {
                date: {
                  $gte: ISODate("2020-10-01T00:00:00Z"),
                  $lt: ISODate("2020-11-01T00:00:00Z")
                }
              }
            },
            {
              $project: {
                _id: 0, // Exclude _id
                name: 1,
                date: 1,
                description: 1,
                type: { $literal: "task" } // Add a type field
              }
            }
          ]
        }
      }
    ]);

2)Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020
Query:
    db.company_drives.find({
      date: {
        $gte: ISODate('2020-10-15T00:00:00.000Z'),
        $lte: ISODate('2020-10-31T00:00:00.000Z')
      }
    }, {
      _id: 0,
      date: 1
    });

3)Find all the company drives and students who are appeared for the placement.
Query:
    db.company_drives.find(
      { "student_appeared.placement_status": "Appeared" },
      { _id: 0, company_name: 1, date: 1, job_description: 1, location: 1, student_appeared: { $elemMatch: { placement_status: "Appeared" } } }
    )

4)Find the number of problems solved by the user in codekata
Query:
    db.codekata.find(
      { "user_id": ObjectId("67499b858a257dd7300d8190") },  // Replace with the user_id you're interested in
      { "_id": 0, "problems_solved": 1 }
    )
    
5)Find all the mentors with who has the mentee's count more than 15
Query:
    db.mentors.find(
      { mentees: { $gt: 15 } }, 
      { _id: 0, name: 1, mentees: 1 }
    )

6)Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020
Query:
    db.attendance.aggregate([
      {
        $match: {
          status: "absent", // Users marked as absent
          date: {
            $gte: ISODate("2020-10-15T00:00:00.000Z"), // From 15th October 2020
            $lte: ISODate("2020-10-31T23:59:59.000Z") // Until 31st October 2020
          }
        }
      },
      {
        $group: {
          _id: "$user_id" // Grouping by user_id to get users who were absent
        }
      },
      {
        $lookup: {
          from: "tasks", // Join with the tasks collection
          localField: "_id", // user_id from attendance
          foreignField: "user_id", // user_id from tasks
          as: "task_submission" // Store the result of the lookup
        }
      },
      {
        $unwind: "$task_submission" // Unwind the array to access individual task entries
      },
      {
        $match: {
          "task_submission.completed": false, // Tasks not completed
          "task_submission.submission_date": null // Tasks not submitted
        }
      },
      {
        $count: "absent_and_not_submitted_count" // Count the users who were absent and did not submit tasks
      }
    ])